package chapter07;import java.util.concurrent.atomic.AtomicInteger;import java.util.function.IntBinaryOperator;import java.util.function.IntUnaryOperator;/** *  * @author tengfei.fangtf * @version $Id: AtomicIntegerTest.java, v 0.1 2015-8-1 ÉÏÎç12:13:16 tengfei.fangtf Exp $ */public class AtomicIntegerTest {    static AtomicInteger ai = new AtomicInteger(1);    public static void main(String[] args) {    ai.addAndGet(3);    ai.getAndUpdate(new IntUnaryOperator() {				@Override		public int applyAsInt(int prev) {						return prev+3;		}	});    ai.accumulateAndGet(6,new IntBinaryOperator() {				@Override		public int applyAsInt(int prev, int x) {			return prev-x;		}	});    	System.out.println(ai.getAndIncrement());        System.out.println(ai.get());    }}